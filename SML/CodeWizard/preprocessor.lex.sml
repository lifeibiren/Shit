structure CPreProLexer=
   struct
    structure UserDeclarations =
      struct
(*#line 1.1 "preprocessor.lex"*)open PreProSym

type lexresult = CPreProToken

val linenum = ref 1
val column = ref 1
val lineStart = ref 1
val columnStart = ref 1
val error = fn x => TextIO.output(TextIO.stdOut, x ^ "\n")

val eof = fn () => EOF

fun printYytext text = print (text ^ "\n")

fun count yytext =
    let
        (* save starting position of current symbol *)
        val _ = lineStart := !linenum
        val _ = columnStart := !column
        fun loop yytext off =
            if off < String.size yytext
            then case String.sub (yytext, off) of
                  #"\n" => (column := 1; linenum := !linenum + 1; loop yytext (off + 1))
                 | _   => (column := !column + 1; loop yytext (off + 1))
            else ()
    in
        loop yytext 0
    end

(*fun makeToken sym text =
  let
    val _ = count text
  in
    sym (value, Position (!lineStart, !columnStart))
  end*)

fun tok sym text =
  let
    val _ = count text
  in
    CPreProToken (sym, text, Position (!lineStart, !columnStart))
  end

(*#line 48.1 "preprocessor.lex.sml"*)
end (* end of user routines *)
exception LexError (* raised if illegal leaf action tried *)
structure Internal =
	struct

datatype yyfinstate = N of int
type statedata = {fin : yyfinstate list, trans: string}
(* transition & final state table *)
val tab = let
val s = [ 
 (0, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
 (1, 
"\003\003\003\003\003\003\003\003\003\118\119\003\003\118\003\003\
\\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\
\\118\117\110\065\003\062\061\060\004\004\059\058\004\057\053\052\
\\041\041\041\041\041\041\041\041\041\041\040\004\035\034\032\004\
\\003\007\007\007\007\007\007\007\007\007\007\007\010\007\007\007\
\\007\007\007\007\007\007\007\007\007\007\007\004\003\004\009\007\
\\003\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\
\\007\007\007\007\007\007\007\007\007\007\007\004\005\004\004\003\
\\003"
),
 (5, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\006\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\006\000\000\000\
\\000"
),
 (7, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\008\008\008\008\008\008\008\008\008\008\000\000\000\000\000\000\
\\000\008\008\008\008\008\008\008\008\008\008\008\008\008\008\008\
\\008\008\008\008\008\008\008\008\008\008\008\000\000\000\000\008\
\\000\008\008\008\008\008\008\008\008\008\008\008\008\008\008\008\
\\008\008\008\008\008\008\008\008\008\008\008\000\000\000\000\000\
\\000"
),
 (9, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\006\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
 (10, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\019\000\000\000\000\011\000\000\000\000\000\000\000\000\
\\008\008\008\008\008\008\008\008\008\008\000\000\000\000\000\000\
\\000\008\008\008\008\008\008\008\008\008\008\008\008\008\008\008\
\\008\008\008\008\008\008\008\008\008\008\008\000\000\000\000\008\
\\000\008\008\008\008\008\008\008\008\008\008\008\008\008\008\008\
\\008\008\008\008\008\008\008\008\008\008\008\000\000\000\000\000\
\\000"
),
 (11, 
"\012\012\012\012\012\012\012\012\012\012\000\012\012\012\012\012\
\\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\
\\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\
\\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\
\\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\
\\012\012\012\012\012\012\012\012\012\012\012\012\016\012\012\012\
\\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\
\\012\012\012\012\012\012\012\012\014\012\012\012\012\012\012\012\
\\012"
),
 (12, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\013\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
 (14, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\013\000\000\000\000\000\000\000\000\
\\015\015\015\015\015\015\015\015\015\015\000\000\000\000\000\000\
\\000\015\015\015\015\015\015\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\015\015\015\015\015\015\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
 (16, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\013\000\000\000\000\000\000\000\000\
\\017\017\017\017\017\017\017\017\000\000\000\000\000\000\000\012\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\012\012\000\000\000\012\000\000\000\000\000\000\000\012\000\
\\000\000\012\000\012\000\012\000\000\000\000\000\000\000\000\000\
\\000"
),
 (17, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\013\000\000\000\000\000\000\000\000\
\\018\018\018\018\018\018\018\018\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
 (18, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\013\000\000\000\000\000\000\000\000\
\\012\012\012\012\012\012\012\012\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
 (19, 
"\020\020\020\020\020\020\020\020\020\020\000\020\020\020\020\020\
\\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\
\\020\020\026\020\020\020\020\020\020\020\020\020\020\020\020\020\
\\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\
\\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\
\\020\020\020\020\020\020\020\020\020\020\020\020\029\020\020\020\
\\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\
\\020\020\020\020\020\020\020\020\027\020\020\020\020\020\020\020\
\\020"
),
 (20, 
"\020\020\020\020\020\020\020\020\020\020\000\020\020\020\020\020\
\\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\
\\020\020\026\020\020\020\020\020\020\020\020\020\020\020\020\020\
\\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\
\\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\
\\020\020\020\020\020\020\020\020\020\020\020\020\023\020\020\020\
\\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\
\\020\020\020\020\020\020\020\020\021\020\020\020\020\020\020\020\
\\020"
),
 (21, 
"\020\020\020\020\020\020\020\020\020\020\000\020\020\020\020\020\
\\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\
\\020\020\026\020\020\020\020\020\020\020\020\020\020\020\020\020\
\\022\022\022\022\022\022\022\022\022\022\020\020\020\020\020\020\
\\020\022\022\022\022\022\022\020\020\020\020\020\020\020\020\020\
\\020\020\020\020\020\020\020\020\020\020\020\020\023\020\020\020\
\\020\022\022\022\022\022\022\020\020\020\020\020\020\020\020\020\
\\020\020\020\020\020\020\020\020\021\020\020\020\020\020\020\020\
\\020"
),
 (23, 
"\020\020\020\020\020\020\020\020\020\020\000\020\020\020\020\020\
\\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\
\\020\020\026\020\020\020\020\020\020\020\020\020\020\020\020\020\
\\024\024\024\024\024\024\024\024\020\020\020\020\020\020\020\020\
\\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\
\\020\020\020\020\020\020\020\020\020\020\020\020\023\020\020\020\
\\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\
\\020\020\020\020\020\020\020\020\021\020\020\020\020\020\020\020\
\\020"
),
 (24, 
"\020\020\020\020\020\020\020\020\020\020\000\020\020\020\020\020\
\\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\
\\020\020\026\020\020\020\020\020\020\020\020\020\020\020\020\020\
\\025\025\025\025\025\025\025\025\020\020\020\020\020\020\020\020\
\\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\
\\020\020\020\020\020\020\020\020\020\020\020\020\023\020\020\020\
\\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\
\\020\020\020\020\020\020\020\020\021\020\020\020\020\020\020\020\
\\020"
),
 (27, 
"\020\020\020\020\020\020\020\020\020\020\000\020\020\020\020\020\
\\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\
\\020\020\026\020\020\020\020\020\020\020\020\020\020\020\020\020\
\\028\028\028\028\028\028\028\028\028\028\020\020\020\020\020\020\
\\020\028\028\028\028\028\028\020\020\020\020\020\020\020\020\020\
\\020\020\020\020\020\020\020\020\020\020\020\020\023\020\020\020\
\\020\028\028\028\028\028\028\020\020\020\020\020\020\020\020\020\
\\020\020\020\020\020\020\020\020\021\020\020\020\020\020\020\020\
\\020"
),
 (29, 
"\020\020\020\020\020\020\020\020\020\020\000\020\020\020\020\020\
\\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\
\\020\020\026\020\020\020\020\020\020\020\020\020\020\020\020\020\
\\030\030\030\030\030\030\030\030\020\020\020\020\020\020\020\020\
\\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\
\\020\020\020\020\020\020\020\020\020\020\020\020\023\020\020\020\
\\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\
\\020\020\020\020\020\020\020\020\021\020\020\020\020\020\020\020\
\\020"
),
 (30, 
"\020\020\020\020\020\020\020\020\020\020\000\020\020\020\020\020\
\\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\
\\020\020\026\020\020\020\020\020\020\020\020\020\020\020\020\020\
\\031\031\031\031\031\031\031\031\020\020\020\020\020\020\020\020\
\\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\
\\020\020\020\020\020\020\020\020\020\020\020\020\023\020\020\020\
\\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\020\
\\020\020\020\020\020\020\020\020\021\020\020\020\020\020\020\020\
\\020"
),
 (32, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\006\033\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
 (35, 
"\036\036\036\036\036\036\036\036\036\036\000\036\036\036\036\036\
\\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\
\\036\036\036\036\036\038\036\036\036\036\036\036\036\036\036\036\
\\036\036\036\036\036\036\036\036\036\036\038\036\039\038\000\036\
\\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\
\\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\
\\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\
\\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\
\\036"
),
 (36, 
"\036\036\036\036\036\036\036\036\036\036\000\036\036\036\036\036\
\\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\
\\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\
\\036\036\036\036\036\036\036\036\036\036\036\036\036\036\037\036\
\\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\
\\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\
\\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\
\\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\
\\036"
),
 (39, 
"\036\036\036\036\036\036\036\036\036\036\000\036\036\036\036\036\
\\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\
\\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\
\\036\036\036\036\036\036\036\036\036\036\036\036\036\038\037\036\
\\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\
\\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\
\\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\
\\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\
\\036"
),
 (40, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\006\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
 (41, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\051\000\
\\048\048\048\048\048\048\048\048\048\048\000\000\000\000\000\000\
\\000\042\042\042\042\043\042\042\042\042\042\042\042\042\042\042\
\\043\042\042\042\042\042\042\042\042\042\042\000\000\000\000\042\
\\000\042\042\042\042\043\042\042\042\042\042\042\042\042\042\042\
\\043\042\042\042\042\042\042\042\042\042\042\000\000\000\000\000\
\\000"
),
 (42, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\046\000\
\\044\044\044\044\044\044\044\044\044\044\000\000\000\000\000\000\
\\000\042\042\042\042\043\042\042\042\042\042\042\042\042\042\042\
\\043\042\042\042\042\042\042\042\042\042\042\000\000\000\000\042\
\\000\042\042\042\042\043\042\042\042\042\042\042\042\042\042\042\
\\043\042\042\042\042\042\042\042\042\042\042\000\000\000\000\000\
\\000"
),
 (43, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\042\000\042\046\000\
\\044\044\044\044\044\044\044\044\044\044\000\000\000\000\000\000\
\\000\042\042\042\042\043\042\042\042\042\042\042\042\042\042\042\
\\043\042\042\042\042\042\042\042\042\042\042\000\000\000\000\042\
\\000\042\042\042\042\043\042\042\042\042\042\042\042\042\042\042\
\\043\042\042\042\042\042\042\042\042\042\042\000\000\000\000\000\
\\000"
),
 (44, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\045\000\
\\044\044\044\044\044\044\044\044\044\044\000\000\000\000\000\000\
\\000\042\042\042\042\043\042\042\042\042\042\042\042\042\042\042\
\\043\042\042\042\042\042\042\042\042\042\042\000\000\000\000\042\
\\000\042\042\042\042\043\042\042\042\042\042\042\042\042\042\042\
\\043\042\042\042\042\042\042\042\042\042\042\000\000\000\000\000\
\\000"
),
 (46, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\047\047\047\047\047\047\047\047\047\047\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
 (48, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\049\000\
\\048\048\048\048\048\048\048\048\048\048\000\000\000\000\000\000\
\\000\042\042\042\042\043\042\042\042\042\042\042\042\042\042\042\
\\043\042\042\042\042\042\042\042\042\042\042\000\000\000\000\042\
\\000\042\042\042\042\043\042\042\042\042\042\042\042\042\042\042\
\\043\042\042\042\042\042\042\042\042\042\042\000\000\000\000\000\
\\000"
),
 (49, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\046\000\
\\050\050\050\050\050\050\050\050\050\050\000\000\000\000\000\000\
\\000\042\042\042\042\043\042\042\042\042\042\042\042\042\042\042\
\\043\042\042\042\042\042\042\042\042\042\042\000\000\000\000\042\
\\000\042\042\042\042\043\042\042\042\042\042\042\042\042\042\042\
\\043\042\042\042\042\042\042\042\042\042\042\000\000\000\000\000\
\\000"
),
 (50, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\045\000\
\\050\050\050\050\050\050\050\050\050\050\000\000\000\000\000\000\
\\000\042\042\042\042\043\042\042\042\042\042\042\042\042\042\042\
\\043\042\042\042\042\042\042\042\042\042\042\000\000\000\000\042\
\\000\042\042\042\042\043\042\042\042\042\042\042\042\042\042\042\
\\043\042\042\042\042\042\042\042\042\042\042\000\000\000\000\000\
\\000"
),
 (53, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\056\000\
\\054\054\054\054\054\054\054\054\054\054\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
 (54, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\046\000\
\\055\055\055\055\055\055\055\055\055\055\000\000\000\000\000\000\
\\000\042\042\042\042\043\042\042\042\042\042\042\042\042\042\042\
\\043\042\042\042\042\042\042\042\042\042\042\000\000\000\000\042\
\\000\042\042\042\042\043\042\042\042\042\042\042\042\042\042\042\
\\043\042\042\042\042\042\042\042\042\042\042\000\000\000\000\000\
\\000"
),
 (55, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\045\000\
\\055\055\055\055\055\055\055\055\055\055\000\000\000\000\000\000\
\\000\042\042\042\042\043\042\042\042\042\042\042\042\042\042\042\
\\043\042\042\042\042\042\042\042\042\042\042\000\000\000\000\042\
\\000\042\042\042\042\043\042\042\042\042\042\042\042\042\042\042\
\\043\042\042\042\042\042\042\042\042\042\042\000\000\000\000\000\
\\000"
),
 (56, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\006\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
 (57, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\006\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\006\006\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
 (58, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\006\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\006\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
 (61, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\006\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\006\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
 (62, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\063\000\000\006\006\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
 (63, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\064\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
 (64, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\006\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
 (65, 
"\066\066\066\066\066\066\066\066\066\066\000\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\109\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\075\066\066\066\073\066\066\070\066\066\066\
\\068\066\066\066\066\067\066\066\066\066\066\066\066\066\066\066\
\\066"
),
 (66, 
"\066\066\066\066\066\066\066\066\066\066\000\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\075\066\066\066\073\066\066\070\066\066\066\
\\068\066\066\066\066\067\066\066\066\066\066\066\066\066\066\066\
\\066"
),
 (67, 
"\066\066\066\066\066\066\066\066\066\066\000\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\075\066\066\066\073\066\066\070\066\097\066\
\\068\066\066\066\066\067\066\066\066\066\066\066\066\066\066\066\
\\066"
),
 (68, 
"\066\066\066\066\066\066\066\066\066\066\000\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\075\066\066\066\073\066\066\070\066\066\066\
\\068\066\069\066\066\067\066\066\066\066\066\066\066\066\066\066\
\\066"
),
 (69, 
"\066\066\066\066\066\066\066\066\066\066\000\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\105\066\066\066\075\066\066\066\073\066\066\070\066\066\066\
\\068\066\066\066\066\067\066\066\066\066\066\066\066\066\066\066\
\\066"
),
 (70, 
"\066\066\066\066\066\066\066\066\066\066\000\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\075\066\066\066\071\066\066\070\066\066\066\
\\068\066\066\066\066\067\066\066\066\066\066\066\066\066\066\066\
\\066"
),
 (71, 
"\066\066\066\066\066\066\066\066\066\066\000\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\075\103\066\066\073\066\066\070\066\072\066\
\\068\066\066\066\066\067\066\066\066\066\066\066\066\066\066\066\
\\066"
),
 (72, 
"\066\066\066\066\066\066\066\066\066\066\000\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\094\066\104\066\066\066\073\066\066\070\066\066\066\
\\068\066\066\066\066\067\066\066\066\066\066\066\066\066\066\066\
\\066"
),
 (73, 
"\066\066\066\066\066\066\066\066\066\066\000\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\075\103\066\066\073\066\066\070\066\074\066\
\\068\066\066\066\066\067\066\066\066\066\066\066\066\066\066\066\
\\066"
),
 (74, 
"\066\066\066\066\066\066\066\066\066\066\000\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\094\066\075\066\066\066\073\066\066\070\066\066\066\
\\068\066\066\066\066\067\066\066\066\066\066\066\066\066\066\066\
\\066"
),
 (75, 
"\066\066\066\066\066\066\066\066\066\066\000\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\075\066\066\066\073\066\066\087\066\080\066\
\\068\066\076\066\066\067\066\066\066\066\066\066\066\066\066\066\
\\066"
),
 (76, 
"\066\066\066\066\066\066\066\066\066\066\000\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\075\066\066\066\073\066\066\070\066\066\066\
\\068\066\077\066\066\067\066\066\066\066\066\066\066\066\066\066\
\\066"
),
 (77, 
"\066\066\066\066\066\066\066\066\066\066\000\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\075\066\066\066\073\066\066\070\066\066\078\
\\068\066\066\066\066\067\066\066\066\066\066\066\066\066\066\066\
\\066"
),
 (78, 
"\066\066\066\066\066\066\066\066\066\066\000\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\075\066\066\066\073\066\066\070\066\066\066\
\\068\066\079\066\066\067\066\066\066\066\066\066\066\066\066\066\
\\066"
),
 (80, 
"\066\066\066\066\066\066\066\066\066\066\000\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\081\075\066\066\066\073\066\066\070\066\066\066\
\\068\066\066\066\066\067\066\066\066\066\066\066\066\066\066\066\
\\066"
),
 (81, 
"\066\066\066\066\066\066\066\066\066\066\000\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\075\066\066\066\082\066\066\070\066\066\066\
\\068\066\066\066\066\067\066\066\066\066\066\066\066\066\066\066\
\\066"
),
 (82, 
"\066\066\066\066\066\066\066\066\066\066\000\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\075\083\066\066\073\066\066\070\066\074\066\
\\068\066\066\066\066\067\066\066\066\066\066\066\066\066\066\066\
\\066"
),
 (83, 
"\066\066\066\066\066\066\066\066\066\066\000\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\090\075\066\066\066\073\066\066\070\066\084\066\
\\068\066\066\066\066\067\066\066\066\066\066\066\066\066\066\066\
\\066"
),
 (84, 
"\066\066\066\066\066\066\066\066\066\066\000\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\085\075\066\066\066\073\066\066\070\066\066\066\
\\068\066\066\066\066\067\066\066\066\066\066\066\066\066\066\066\
\\066"
),
 (85, 
"\066\066\066\066\066\066\066\066\066\066\000\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\086\066\066\066\073\066\066\070\066\066\066\
\\068\066\066\066\066\067\066\066\066\066\066\066\066\066\066\066\
\\066"
),
 (86, 
"\066\066\066\066\066\066\066\066\066\066\000\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\075\093\066\066\073\066\066\087\066\080\066\
\\068\066\076\066\066\067\066\066\066\066\066\066\066\066\066\066\
\\066"
),
 (87, 
"\066\066\066\066\066\066\066\066\066\066\000\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\075\066\066\066\088\066\066\070\066\066\066\
\\068\066\066\066\066\067\066\066\066\066\066\066\066\066\066\066\
\\066"
),
 (88, 
"\066\066\066\066\066\066\066\066\066\066\000\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\075\089\066\066\073\066\066\070\066\072\066\
\\068\066\066\066\066\067\066\066\066\066\066\066\066\066\066\066\
\\066"
),
 (90, 
"\066\066\066\066\066\066\066\066\066\066\000\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\091\066\066\066\073\066\066\070\066\066\066\
\\068\066\066\066\066\067\066\066\066\066\066\066\066\066\066\066\
\\066"
),
 (91, 
"\066\066\066\066\066\066\066\066\066\066\000\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\075\092\066\066\073\066\066\087\066\080\066\
\\068\066\076\066\066\067\066\066\066\066\066\066\066\066\066\066\
\\066"
),
 (94, 
"\066\066\066\066\066\066\066\066\066\066\000\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\075\066\066\066\073\066\066\095\066\066\066\
\\068\066\066\066\066\067\066\066\066\066\066\066\066\066\066\066\
\\066"
),
 (95, 
"\066\066\066\066\066\066\066\066\066\066\000\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\075\066\066\066\071\066\066\070\066\066\066\
\\068\066\066\066\066\096\066\066\066\066\066\066\066\066\066\066\
\\066"
),
 (96, 
"\066\066\066\066\066\066\066\066\066\066\000\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\101\075\066\066\066\073\066\066\070\066\097\066\
\\068\066\066\066\066\067\066\066\066\066\066\066\066\066\066\066\
\\066"
),
 (97, 
"\066\066\066\066\066\066\066\066\066\066\000\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\098\075\066\066\066\073\066\066\070\066\066\066\
\\068\066\066\066\066\067\066\066\066\066\066\066\066\066\066\066\
\\066"
),
 (98, 
"\066\066\066\066\066\066\066\066\066\066\000\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\099\066\066\066\073\066\066\070\066\066\066\
\\068\066\066\066\066\067\066\066\066\066\066\066\066\066\066\066\
\\066"
),
 (99, 
"\066\066\066\066\066\066\066\066\066\066\000\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\075\100\066\066\073\066\066\087\066\080\066\
\\068\066\076\066\066\067\066\066\066\066\066\066\066\066\066\066\
\\066"
),
 (101, 
"\066\066\066\066\066\066\066\066\066\066\000\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\102\066\066\066\073\066\066\070\066\066\066\
\\068\066\066\066\066\067\066\066\066\066\066\066\066\066\066\066\
\\066"
),
 (105, 
"\066\066\066\066\066\066\066\066\066\066\000\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\075\066\106\066\073\066\066\070\066\066\066\
\\068\066\066\066\066\067\066\066\066\066\066\066\066\066\066\066\
\\066"
),
 (106, 
"\066\066\066\066\066\066\066\066\066\066\000\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\075\066\066\066\073\066\066\070\107\066\066\
\\068\066\066\066\066\067\066\066\066\066\066\066\066\066\066\066\
\\066"
),
 (107, 
"\066\066\066\066\066\066\066\066\066\066\000\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\066\
\\066\108\066\066\066\075\066\066\066\073\066\066\070\066\066\066\
\\068\066\066\066\066\067\066\066\066\066\066\066\066\066\066\066\
\\066"
),
 (110, 
"\111\111\111\111\111\111\111\111\111\111\000\111\111\111\111\111\
\\111\111\111\111\111\111\111\111\111\111\111\111\111\111\111\111\
\\111\111\026\111\111\111\111\111\111\111\111\111\111\111\111\111\
\\111\111\111\111\111\111\111\111\111\111\111\111\111\111\111\111\
\\111\111\111\111\111\111\111\111\111\111\111\111\111\111\111\111\
\\111\111\111\111\111\111\111\111\111\111\111\111\029\111\111\111\
\\111\111\111\111\111\111\111\111\111\111\111\111\111\111\111\111\
\\111\111\111\111\111\111\111\111\115\111\111\111\111\111\111\111\
\\111"
),
 (111, 
"\111\111\111\111\111\111\111\111\111\111\000\111\111\111\111\111\
\\111\111\111\111\111\111\111\111\111\111\111\111\111\111\111\111\
\\111\111\114\111\111\111\111\111\111\111\111\111\111\111\111\111\
\\111\111\111\111\111\111\111\111\111\111\111\111\111\111\111\111\
\\111\111\111\111\111\111\111\111\111\111\111\111\111\111\111\111\
\\111\111\111\111\111\111\111\111\111\111\111\111\023\111\111\111\
\\111\111\111\111\111\111\111\111\111\111\111\111\111\111\111\111\
\\111\111\111\111\111\111\111\111\112\111\111\111\111\111\111\111\
\\111"
),
 (112, 
"\111\111\111\111\111\111\111\111\111\111\000\111\111\111\111\111\
\\111\111\111\111\111\111\111\111\111\111\111\111\111\111\111\111\
\\111\111\114\111\111\111\111\111\111\111\111\111\111\111\111\111\
\\113\113\113\113\113\113\113\113\113\113\111\111\111\111\111\111\
\\111\113\113\113\113\113\113\111\111\111\111\111\111\111\111\111\
\\111\111\111\111\111\111\111\111\111\111\111\111\023\111\111\111\
\\111\113\113\113\113\113\113\111\111\111\111\111\111\111\111\111\
\\111\111\111\111\111\111\111\111\112\111\111\111\111\111\111\111\
\\111"
),
 (115, 
"\111\111\111\111\111\111\111\111\111\111\000\111\111\111\111\111\
\\111\111\111\111\111\111\111\111\111\111\111\111\111\111\111\111\
\\111\111\114\111\111\111\111\111\111\111\111\111\111\111\111\111\
\\116\116\116\116\116\116\116\116\116\116\111\111\111\111\111\111\
\\111\116\116\116\116\116\116\111\111\111\111\111\111\111\111\111\
\\111\111\111\111\111\111\111\111\111\111\111\111\023\111\111\111\
\\111\116\116\116\116\116\116\111\111\111\111\111\111\111\111\111\
\\111\111\111\111\111\111\111\111\112\111\111\111\111\111\111\111\
\\111"
),
 (118, 
"\000\000\000\000\000\000\000\000\000\119\119\000\000\119\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\119\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
(0, "")]
fun f x = x 
val s = List.map f (List.rev (tl (List.rev s))) 
exception LexHackingError 
fun look ((j,x)::r, i: int) = if i = j then x else look(r, i) 
  | look ([], i) = raise LexHackingError
fun g {fin=x, trans=i} = {fin=x, trans=look(s,i)} 
in Vector.fromList(List.map g 
[{fin = [], trans = 0},
{fin = [], trans = 1},
{fin = [], trans = 1},
{fin = [(N 291)], trans = 0},
{fin = [(N 289),(N 291)], trans = 0},
{fin = [(N 289),(N 291)], trans = 5},
{fin = [(N 289)], trans = 0},
{fin = [(N 94),(N 291)], trans = 7},
{fin = [(N 94)], trans = 7},
{fin = [(N 289),(N 291)], trans = 9},
{fin = [(N 94),(N 291)], trans = 10},
{fin = [], trans = 11},
{fin = [], trans = 12},
{fin = [(N 143)], trans = 0},
{fin = [], trans = 14},
{fin = [], trans = 14},
{fin = [], trans = 16},
{fin = [], trans = 17},
{fin = [], trans = 18},
{fin = [], trans = 19},
{fin = [], trans = 20},
{fin = [], trans = 21},
{fin = [], trans = 21},
{fin = [], trans = 23},
{fin = [], trans = 24},
{fin = [], trans = 20},
{fin = [(N 201)], trans = 20},
{fin = [], trans = 27},
{fin = [], trans = 27},
{fin = [], trans = 29},
{fin = [], trans = 30},
{fin = [], trans = 20},
{fin = [(N 289),(N 291)], trans = 32},
{fin = [(N 289)], trans = 9},
{fin = [(N 289),(N 291)], trans = 9},
{fin = [(N 289),(N 291)], trans = 35},
{fin = [], trans = 36},
{fin = [(N 90)], trans = 0},
{fin = [(N 289)], trans = 36},
{fin = [(N 289)], trans = 39},
{fin = [(N 289),(N 291)], trans = 40},
{fin = [(N 112),(N 291)], trans = 41},
{fin = [(N 112)], trans = 42},
{fin = [(N 112)], trans = 43},
{fin = [(N 112)], trans = 44},
{fin = [(N 112)], trans = 42},
{fin = [], trans = 46},
{fin = [(N 112)], trans = 42},
{fin = [(N 112)], trans = 48},
{fin = [(N 112)], trans = 49},
{fin = [(N 112)], trans = 50},
{fin = [(N 112)], trans = 49},
{fin = [(N 289),(N 291)], trans = 9},
{fin = [(N 289),(N 291)], trans = 53},
{fin = [(N 112)], trans = 54},
{fin = [(N 112)], trans = 55},
{fin = [], trans = 56},
{fin = [(N 289),(N 291)], trans = 57},
{fin = [(N 291)], trans = 58},
{fin = [(N 289),(N 291)], trans = 9},
{fin = [(N 291)], trans = 11},
{fin = [(N 289),(N 291)], trans = 61},
{fin = [(N 289),(N 291)], trans = 62},
{fin = [(N 289)], trans = 63},
{fin = [], trans = 64},
{fin = [(N 289),(N 291)], trans = 65},
{fin = [], trans = 66},
{fin = [], trans = 67},
{fin = [], trans = 68},
{fin = [], trans = 69},
{fin = [], trans = 70},
{fin = [], trans = 71},
{fin = [], trans = 72},
{fin = [], trans = 73},
{fin = [], trans = 74},
{fin = [], trans = 75},
{fin = [], trans = 76},
{fin = [], trans = 77},
{fin = [], trans = 78},
{fin = [(N 72)], trans = 66},
{fin = [], trans = 80},
{fin = [], trans = 81},
{fin = [], trans = 82},
{fin = [(N 7),(N 39)], trans = 83},
{fin = [], trans = 84},
{fin = [], trans = 85},
{fin = [], trans = 86},
{fin = [], trans = 87},
{fin = [], trans = 88},
{fin = [(N 7),(N 31)], trans = 83},
{fin = [], trans = 90},
{fin = [], trans = 91},
{fin = [(N 15)], trans = 66},
{fin = [(N 24)], trans = 66},
{fin = [], trans = 94},
{fin = [], trans = 95},
{fin = [], trans = 96},
{fin = [], trans = 97},
{fin = [], trans = 98},
{fin = [], trans = 99},
{fin = [(N 57)], trans = 66},
{fin = [], trans = 101},
{fin = [(N 49)], trans = 75},
{fin = [(N 7)], trans = 83},
{fin = [(N 64)], trans = 75},
{fin = [], trans = 105},
{fin = [], trans = 106},
{fin = [], trans = 107},
{fin = [(N 81)], trans = 66},
{fin = [(N 289)], trans = 66},
{fin = [(N 291)], trans = 110},
{fin = [], trans = 111},
{fin = [], trans = 112},
{fin = [], trans = 112},
{fin = [(N 90),(N 201)], trans = 20},
{fin = [], trans = 115},
{fin = [], trans = 115},
{fin = [(N 289),(N 291)], trans = 9},
{fin = [(N 2),(N 291)], trans = 118},
{fin = [(N 2)], trans = 118}])
end
structure StartStates =
	struct
	datatype yystartstate = STARTSTATE of int

(* start state definitions *)

val INITIAL = STARTSTATE 1;

end
type result = UserDeclarations.lexresult
	exception LexerError (* raised if illegal leaf action tried *)
end

structure YYPosInt : INTEGER = Int
fun makeLexer yyinput =
let	val yygone0= YYPosInt.fromInt ~1
	val yyb = ref "\n" 		(* buffer *)
	val yybl = ref 1		(*buffer length *)
	val yybufpos = ref 1		(* location of next character to use *)
	val yygone = ref yygone0	(* position in file of beginning of buffer *)
	val yydone = ref false		(* eof found yet? *)
	val yybegin = ref 1		(*Current 'start state' for lexer *)

	val YYBEGIN = fn (Internal.StartStates.STARTSTATE x) =>
		 yybegin := x

fun lex () : Internal.result =
let fun continue() = lex() in
  let fun scan (s,AcceptingLeaves : Internal.yyfinstate list list,l,i0) =
	let fun action (i,nil) = raise LexError
	| action (i,nil::l) = action (i-1,l)
	| action (i,(node::acts)::l) =
		case node of
		    Internal.N yyk => 
			(let fun yymktext() = String.substring(!yyb,i0,i-i0)
			     val yypos = YYPosInt.+(YYPosInt.fromInt i0, !yygone)
			open UserDeclarations Internal.StartStates
 in (yybufpos := i; case yyk of 

			(* Application actions *)

  112 => let val yytext=yymktext() in (*#line 116.23 "preprocessor.lex"*) tok PpNumber yytext (*#line 1142.1 "preprocessor.lex.sml"*)
 end
| 143 => let val yytext=yymktext() in (*#line 117.23 "preprocessor.lex"*) tok (CharConstant (String.sub (yytext, 0))) yytext(*#line 1144.1 "preprocessor.lex.sml"*)
 end
| 15 => let val yytext=yymktext() in (*#line 104.27 "preprocessor.lex"*) tok Ifdef yytext (*#line 1146.1 "preprocessor.lex.sml"*)
 end
| 2 => let val yytext=yymktext() in (*#line 101.27 "preprocessor.lex"*) tok (WhiteSpace yytext) yytext (*#line 1148.1 "preprocessor.lex.sml"*)
 end
| 201 => let val yytext=yymktext() in (*#line 118.23 "preprocessor.lex"*) tok (StringLiteral yytext) yytext (*#line 1150.1 "preprocessor.lex.sml"*)
 end
| 24 => let val yytext=yymktext() in (*#line 105.27 "preprocessor.lex"*) tok Ifndef yytext (*#line 1152.1 "preprocessor.lex.sml"*)
 end
| 289 => let val yytext=yymktext() in (*#line 119.23 "preprocessor.lex"*) tok (Punctuator yytext) yytext (*#line 1154.1 "preprocessor.lex.sml"*)
 end
| 291 => let val yytext=yymktext() in (*#line 121.23 "preprocessor.lex"*) count yytext; error ("ignoring bad character " ^ yytext); lex()(*#line 1156.1 "preprocessor.lex.sml"*)
 end
| 31 => let val yytext=yymktext() in (*#line 106.27 "preprocessor.lex"*) tok Elif yytext (*#line 1158.1 "preprocessor.lex.sml"*)
 end
| 39 => let val yytext=yymktext() in (*#line 107.27 "preprocessor.lex"*) tok Endif yytext (*#line 1160.1 "preprocessor.lex.sml"*)
 end
| 49 => let val yytext=yymktext() in (*#line 108.27 "preprocessor.lex"*) tok Include yytext (*#line 1162.1 "preprocessor.lex.sml"*)
 end
| 57 => let val yytext=yymktext() in (*#line 109.27 "preprocessor.lex"*) tok Undef yytext (*#line 1164.1 "preprocessor.lex.sml"*)
 end
| 64 => let val yytext=yymktext() in (*#line 110.27 "preprocessor.lex"*) tok Line yytext (*#line 1166.1 "preprocessor.lex.sml"*)
 end
| 7 => let val yytext=yymktext() in (*#line 103.27 "preprocessor.lex"*) tok If yytext (*#line 1168.1 "preprocessor.lex.sml"*)
 end
| 72 => let val yytext=yymktext() in (*#line 111.27 "preprocessor.lex"*) tok Error yytext (*#line 1170.1 "preprocessor.lex.sml"*)
 end
| 81 => let val yytext=yymktext() in (*#line 112.27 "preprocessor.lex"*) tok Pragma yytext (*#line 1172.1 "preprocessor.lex.sml"*)
 end
| 90 => let val yytext=yymktext() in (*#line 114.23 "preprocessor.lex"*) tok (HeaderName (String.substring(yytext, 1, String.size (yytext) - 2))) yytext (*#line 1174.1 "preprocessor.lex.sml"*)
 end
| 94 => let val yytext=yymktext() in (*#line 115.23 "preprocessor.lex"*) tok (Identifier yytext) yytext (*#line 1176.1 "preprocessor.lex.sml"*)
 end
| _ => raise Internal.LexerError

		) end )

	val {fin,trans} = Vector.sub(Internal.tab, s)
	val NewAcceptingLeaves = fin::AcceptingLeaves
	in if l = !yybl then
	     if trans = #trans(Vector.sub(Internal.tab,0))
	       then action(l,NewAcceptingLeaves
) else	    let val newchars= if !yydone then "" else yyinput 1024
	    in if (String.size newchars)=0
		  then (yydone := true;
		        if (l=i0) then UserDeclarations.eof ()
		                  else action(l,NewAcceptingLeaves))
		  else (if i0=l then yyb := newchars
		     else yyb := String.substring(!yyb,i0,l-i0)^newchars;
		     yygone := YYPosInt.+(!yygone, YYPosInt.fromInt i0);
		     yybl := String.size (!yyb);
		     scan (s,AcceptingLeaves,l-i0,0))
	    end
	  else let val NewChar = Char.ord(CharVector.sub(!yyb,l))
		val NewChar = if NewChar<128 then NewChar else 128
		val NewState = Char.ord(CharVector.sub(trans,NewChar))
		in if NewState=0 then action(l,NewAcceptingLeaves)
		else scan(NewState,NewAcceptingLeaves,l+1,i0)
	end
	end
(*
	val start= if String.substring(!yyb,!yybufpos-1,1)="\n"
then !yybegin+1 else !yybegin
*)
	in scan(!yybegin (* start *),nil,!yybufpos,!yybufpos)
    end
end
  in lex
  end
end
